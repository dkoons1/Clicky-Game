{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Score/index.js","App.js","index.js"],"names":["FriendCard","props","className","onClick","shuffleDeck","id","alt","name","src","image","occupation","location","Wrapper","children","Title","Score","score","message","App","state","friends","clickedFriends","includes","setState","console","log","push","length","sort","a","b","Math","random","this","map","friend","key","Component","ReactDOM","render","document","getElementById"],"mappings":"8vFA0BeA,MAvBf,SAAoBC,GAClB,OACE,yBAAKC,UAAU,OAAOC,QAAS,kBAAMF,EAAMG,YAAYH,EAAMI,MAC3D,yBAAKH,UAAU,iBACb,yBAAKI,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,SAEnC,yBAAKP,UAAU,WACb,4BACE,4BACE,yCADF,IAC0BD,EAAMM,MAEhC,4BACE,+CADF,IACgCN,EAAMS,YAEtC,4BACE,6CADF,IAC8BT,EAAMU,c,MCX/BC,MAJf,SAAiBX,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMY,W,MCG1BC,MAJf,SAAeb,GACb,OAAO,wBAAIC,UAAU,SAASD,EAAMY,W,aCQvBE,MATf,SAAed,GACb,OACC,yBAAKC,UAAU,YACd,wBAAIA,UAAU,SAAd,WAA+BD,EAAMe,OACrC,wBAAId,UAAU,SAASD,EAAMgB,WC6DlBC,E,2MA3DbC,MAAQ,CACNC,UACAC,eAAgB,GAChBL,MAAO,EACPC,QAAS,I,EAWXb,YAAc,SAAAC,GACZ,IAAIgB,EAAiB,EAAKF,MAAME,eAC7B,OAAGA,EAAeC,SAASjB,IACzB,EAAKkB,SAAS,CAAEF,eAAgB,GAAIL,MAAO,EAAGC,QAAS,0BACvDO,QAAQC,IAAI,cAIZJ,EAAeK,KAAKrB,GACO,IAAzBgB,EAAeM,QAChB,EAAKJ,SAAS,CAACP,MAAO,EAAGK,eAAgB,GAAIJ,QAAS,4BACtDO,QAAQC,IAAI,YAGd,EAAKF,SAAS,CAAEH,UAASC,iBAAgBL,MAAO,EAAKG,MAAMH,MAAQ,EAAGC,QAAS,UAE/EG,EAAQQ,MAAK,SAACC,EAAEC,GAAH,MAAS,GAAMC,KAAKC,e,wEAO7B,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,qBACA,kBAAC,EAAD,CAAOhB,MAAOiB,KAAKd,MAAMH,MAAOC,QAASgB,KAAKd,MAAMF,UACnDgB,KAAKd,MAAMC,QAAQc,KAAI,SAAAC,GAAM,OAC5B,kBAAC,EAAD,CACE/B,YAAa,EAAKA,YAClBC,GAAI8B,EAAO9B,GACX+B,IAAKD,EAAO9B,GACZE,KAAM4B,EAAO5B,KACbE,MAAO0B,EAAO1B,MACdC,WAAYyB,EAAOzB,WACnBC,SAAUwB,EAAOxB,mB,GArDX0B,a,MCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5496e342.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\" onClick={() => props.shuffleDeck(props.id)}>\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n      <div className=\"content\">\n        <ul>\n          <li>\n            <strong>Name:</strong> {props.name}\n          </li>\n          <li>\n            <strong>Occupation:</strong> {props.occupation}\n          </li>\n          <li>\n            <strong>Location:</strong> {props.location}\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Score(props){\n  return (\n   <div className=\"gameWrap\">\n    <h1 className=\"score\"> Score: {props.score}</h1>  \n    <h2 className=\"score\">{props.message}</h2>\n  </div>\n  );\n}\n\nexport default Score;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport Score from \"./components/Score\"\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    clickedFriends: [],\n    score: 0,\n    message: \"\"\n  };\n\n  // removeFriend = id => {\n  //   // Filter this.state.friends for friends with an id not equal to the id being removed\n  //   const friends = this.state.friends.filter(friend => friend.id !== id);\n  //   // Set this.state.friends equal to the new friends array\n  //   this.setState({ friends });\n  //   console.log(id)\n  // };\n\n  shuffleDeck = id => {\n    let clickedFriends = this.state.clickedFriends\n       if(clickedFriends.includes(id)){\n         this.setState({ clickedFriends: [], score: 0, message: \"Oh no! You lost!\"});\n         console.log(\"you lose\")\n         return;\n       }\n       else {\n         clickedFriends.push(id)\n        if(clickedFriends.length == 12){\n          this.setState({score: 0, clickedFriends: [], message: \"Good job! You Won!\"})\n          console.log(\"winner\")\n          return;\n        }\n        this.setState({ friends, clickedFriends, score: this.state.score + 1, message: \"\"})\n\n        friends.sort((a,b) => 0.5 - Math.random());\n       }\n  };\n\n\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Friends List</Title>\n        <Score score={this.state.score} message={this.state.message}/>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            shuffleDeck={this.shuffleDeck}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}